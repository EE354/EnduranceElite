import type { IncomingMessage, OutgoingMessage } from "node:http";
import type { Cookie, Middleware, RequestContext } from "../index.js";
import type { Request as ExpressRequest, Response as ExpressResponse } from "express";
export declare const node: () => Middleware<[IncomingMessage, OutgoingMessage]>;
export declare const express: () => Middleware<[ExpressRequest, ExpressResponse]>;
type SvelteKitRequestEvent = {
    request: Request;
    cookies: {
        set: (name: string, value: string, options?: Cookie["attributes"]) => void;
    };
};
export declare const sveltekit: () => Middleware<[SvelteKitRequestEvent]>;
type AstroAPIContext = {
    request: Request;
    cookies: {
        set: (name: string, value: string, options?: Cookie["attributes"]) => void;
    };
};
export declare const astro: () => Middleware<[AstroAPIContext]>;
export declare const lucia: () => Middleware<[RequestContext]>;
export {};
